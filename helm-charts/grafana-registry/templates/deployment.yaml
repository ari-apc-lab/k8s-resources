{{- $keycloakRealm := default "exampleRealm" .Values.global.config.keycloakRealm -}}
{{- $keycloakClient := default "exampleClient" .Values.global.config.keycloakClient -}}
{{- $keycloakTlsForDebug := ternary "s" "" ( and .Values.global.debugMode.enabled .Values.global.tls.enabled ) -}}
{{- $projectDomain := default "exampledomain.eu" .Values.global.projectDomain -}}
{{- $keycloakDomainForDebug := ternary ( printf ".%s" $projectDomain ) "" .Values.global.debugMode.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grafana-registry.fullname" . }}
  labels:
    {{- include "grafana-registry.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "grafana-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "grafana-registry.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "grafana-registry.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: FLASK_RUN_PORT
            value: {{ .Values.service.targetPort | quote}}
          # - name: GF_REGISTRY_GUNICORN_WORKERS
          #   value: "4"
          - name: GF_ADDRESS
            value: "grafana"
          - name: GF_PORT
            value: "80"
          - name: GF_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-user
          - name: GF_ADMIN_PW
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-pw
          - name: PROMETHEUS_ADDRESS
            value: "prometheus"
          - name: PROMETHEUS_PORT
            value: "80"
          - name: OIDC_INTROSPECTION_ENDPOINT
            value: "http{{ $keycloakTlsForDebug }}://keycloak{{ $keycloakDomainForDebug }}/realms/{{ $keycloakRealm }}/protocol/openid-connect/token/introspect"
          - name: OIDC_CLIENT_ID
            value: {{ $keycloakClient | quote }}
          - name: OIDC_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: keycloak-postinstall
                key: client-secret
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.targetPort }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
